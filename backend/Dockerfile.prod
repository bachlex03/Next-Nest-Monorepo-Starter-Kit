FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps

# Install required packages for Prisma and build tools
RUN apk add --no-cache libc6-compat openssl

WORKDIR /app

COPY ./package.json ./yarn.lock ./

# Install all dependencies (including dev dependencies for build)
RUN yarn install --frozen-lockfile --ignore-engines && yarn cache clean

# Build the app
FROM base AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache libc6-compat openssl

COPY --from=deps /app/node_modules ./node_modules

COPY ./ .

# Generate Prisma client for the target platform
RUN npx prisma generate

# Copy Prisma schema to a separate location for production stage
RUN mkdir -p ./prisma && cp -r ./src/infrastructure/persistence/prisma/* ./prisma/

# Build the application
RUN yarn run build

# Remove source files but keep all dependencies (including peer dependencies)
RUN rm -rf ./src
# Don't reinstall dependencies - keep the full node_modules from deps stage

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache libc6-compat openssl

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

# Set environment variables
ENV NODE_ENV=production
ENV PORT=4000

# Copy built application and production dependencies
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./
COPY --from=builder --chown=nestjs:nodejs /app/yarn.lock ./

# Copy Prisma schema for migrations (if needed)
COPY --from=builder --chown=nestjs:nodejs /app/prisma ./prisma

# Copy initialization script
COPY --from=builder --chown=nestjs:nodejs /app/scripts ./scripts

# Create startup script that runs migrations before starting the app
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'set -e' >> /app/start.sh && \
    echo 'echo "ðŸ”„ Running Prisma migrations..."' >> /app/start.sh && \
    echo 'yarn prisma:migrate || npx prisma migrate deploy --schema ./prisma/schema.prisma' >> /app/start.sh && \
    echo 'echo "âœ… Migrations completed"' >> /app/start.sh && \
    echo 'echo "ðŸš€ Starting application..."' >> /app/start.sh && \
    echo 'exec node dist/src/main.js' >> /app/start.sh && \
    chmod +x /app/start.sh

# Switch to non-root user
USER nestjs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

EXPOSE 4000

CMD ["/app/start.sh"]