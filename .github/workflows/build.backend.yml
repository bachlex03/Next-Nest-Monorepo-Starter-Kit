name: 🏗️ Build Backend

on:
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"
  push:
    branches:
      - main
    paths:
      - "backend/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend

jobs:
  build:
    name: 🏗️ Build Backend
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Build Backend
        run: |
          docker build -f ./backend/Dockerfile.prod -t baledev/backend:latest

      - name: 📦 Push Backend
        run: |
          docker login -u baledev -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push baledev/backend:latest


# on:
#   pull_request:
#     branches:
#       - main
#     paths:
#       - "backend/**"
#   push:
#     branches:
#       - main
#     paths:
#       - "backend/**"

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}/backend

# jobs:
#   build:
#     name: 🏗️ Build Backend
#     runs-on: ubuntu-latest

#     steps:
#       - name: 📥 Checkout Code
#         uses: actions/checkout@v4

#       - name: 🏷️ Setup Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: 📦 Extract Metadata
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ github.repository }}/backend # Simplified image name, no registry
#           tags: |
#             type=ref,event=branch
#             type=ref,event=pr
#             type=sha,prefix={{branch}}-
#             type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' only on main

#       - name: 🏗️ Build Docker Image
#         uses: docker/build-push-action@v5
#         with:
#           context: ./backend
#           file: ./backend/Dockerfile.prod
#           push: false # Build only, no push
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max
#           platforms: linux/amd64,linux/arm64
